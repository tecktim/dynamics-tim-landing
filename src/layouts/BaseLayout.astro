---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import SeoHead from '../components/SeoHead.astro';
import '../styles/global.css';

interface Props {
  title?: string;
  description?: string;
  ogImage?: string;
  url?: string;
  showHeader?: boolean;
  showFooter?: boolean;
}

const {
  title,
  description,
  ogImage,
  url,
  showHeader = true,
  showFooter = true
} = Astro.props as Props;
const base = import.meta.env.BASE_URL ?? '/';
const pushoverToken = import.meta.env.PUBLIC_PUSHOVER_TOKEN;
const pushoverUser = import.meta.env.PUBLIC_PUSHOVER_USER;
const pushoverConfigured = Boolean(pushoverToken && pushoverUser);

const connectSources = ["'self'"];

if (pushoverConfigured) {
  connectSources.push('https://api.pushover.net');
}

const csp = [
  "default-src 'self'",
  "script-src 'self' 'unsafe-inline'",
  "style-src 'self' 'unsafe-inline'",
  "img-src 'self' data:",
  "font-src 'self'",
  `connect-src ${connectSources.join(' ')}`,
  "frame-src 'self'",
  "base-uri 'self'",
  "form-action 'self'"
].join('; ');
---

<!DOCTYPE html>
<html lang="de">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta http-equiv="Content-Security-Policy" content={csp} />
    <meta name="referrer" content="strict-origin-when-cross-origin" />
    <SeoHead title={title} description={description} ogImage={ogImage} url={url} />
    <link rel="icon" type="image/svg+xml" href={`${base}favicon.svg`} />
    <link rel="manifest" href={`${base}manifest.webmanifest`} />
    <link rel="preload" href={`${base}assets/fonts/inter-latin.woff2`} as="font" type="font/woff2" crossorigin />
    <link rel="preload" href={`${base}assets/fonts/sora-latin.woff2`} as="font" type="font/woff2" crossorigin />
    <link rel="stylesheet" href={`${base}assets/css/consent.css`} />
  </head>
  <body class="min-h-screen bg-slate-50">
    {showHeader && <Header />}
    <main>
      <slot />
    </main>
    {showFooter && <Footer transition:persist />}
    <script src={`${base}assets/js/reveal.js`} defer></script>
    <script src={`${base}assets/js/consent.js`} defer></script>
    <script is:inline define:vars={{ 
      assetBase: base, 
      pushoverConfigured,
      pushoverToken: pushoverToken,
      pushoverUser: pushoverUser,
      pushoverTitle: import.meta.env.PUBLIC_PUSHOVER_TITLE,
      pushoverMessage: import.meta.env.PUBLIC_PUSHOVER_MESSAGE
    }}>
      // Pass config to external script
      window.__lazyLoaderConfig = { 
        assetBase, 
        pushoverConfigured,
        pushoverToken,
        pushoverUser,
        pushoverTitle,
        pushoverMessage
      };
    </script>
    <script src={`${base}assets/js/lazy-loader.js`} defer></script>
  </body>
</html>


